import {defineOperationApp} from '@directus/extensions-sdk';

export default defineOperationApp({
    id: 'yandex-gpt-operation',
    name: 'YandexGPT Text Generator',
    description: 'YandexGPT Text Generator!',
    overview: ({messages}) => [
        {
            label: 'Messages',
            messages: messages,
        },
    ],
    options: [
        {
            field: 'messages',
            name: 'Messages',
            type: 'string',
            meta: {
                field: 'messages',
                width: 'full',
                interface: 'input-code',
                options: {
                    language: 'json',
                    placeholder: JSON.stringify(
                        [
                            {
                                role: 'system',
                                text: 'The system message helps set the behavior of the assistant.',
                            },
                            {
                                role: 'user',
                                text: 'The user messages help instruct the assistant. They can be generated by the end users of an application, or set by a developer as an instruction.',
                            },
                            {
                                role: 'assistant',
                                text: 'The assistant messages help store prior responses. They can also be written by a developer to help give examples of desired behavior.',
                            },
                        ],
                        null,
                        2,
                    ),
                    template: JSON.stringify(
                        [
                            {
                                role: 'system',
                                text: 'The system message.',
                            },
                            {
                                role: 'user',
                                text: 'The user messages.',
                            },
                            {
                                role: 'assistant',
                                text: 'The assistant messages.',
                            },
                        ],
                        null,
                        2,
                    ),
                },
            },
        },
        {
            field: 'temperature',
            name: 'Temperature',
            type: 'float',
            schema: {
                default_value: 0.3,
            },
            meta: {
                field: 'temperature',
                special: null,
                interface: 'slider',
                options: {
                    minValue: 0,
                    maxValue: 1,
                    stepInterval: 0.01,
                    alwaysShowValue: true,
                },
                width: 'half',
                group: 'advanced',
            },
        },
        {
            field: 'max_tokens',
            name: 'Maximum Length',
            type: 'integer',
            schema: {
                default_value: null,
            },
            meta: {
                field: 'max_tokens',
                special: null,
                interface: 'input',
                options: {
                    minValue: 1,
                    maxValue: 4000,
                    stepInterval: 1,
                    placeholder: 'Calculated automatically...',
                },
                width: 'half',
                group: 'advanced',
            },
        },
        {
            field: 'api_key',
            name: 'Yandex Cloud API Key',
            type: 'string',
            meta: {
                width: 'full',
                interface: 'input',
                special: null,
                options: {
                    masked: true,
                    placeholder: 'Use globally set key...',
                },
                group: 'advanced',
            },
        },
        {
            field: 'folder',
            name: 'Yandex Cloud Folder',
            type: 'string',
            meta: {
                width: 'full',
                interface: 'input',
                special: null,
                options: {
                    masked: true,
                    placeholder: 'Use globally set key...',
                },
                group: 'advanced',
            },
        },
    ],
});
